#!/bin/bash
set +x

#If anything fails, we back out
set -e
if [ -z $BB_SCRIPT_DIR ]; then
  echo "[ERROR]: buildahbash script running outside buildahbash environment"
  exit 1
fi
source $BB_SCRIPT_DIR/buildah.funcs
COMPILE_STAGE_NAME="${BB_PKG_IMAGE_FQNAME}_build"
NAME="${BB_PKG_NAME}"

if [ -z ${N_CORE} ]; then
    N_CORE=4
fi

if ! podman image exists ${COMPILE_STAGE_NAME}; then

  BUILD=$(bb_from_buildbox)

  bb_inject genie nova_oa2020 ${BUILD}

  bb_cont_mkdir_cd ${BUILD} /opt/${NAME}-src

  bb_add_from_pkg_dir ${BUILD} NOvARwgt /opt/${NAME}-src

  buildah run ${BUILD} git checkout bugfix/wgt_rel_cv #${BB_PKG_VERS}

  buildah run ${BUILD} sed -i "s/cmake_minimum_required(VERSION 3.10)/cmake_minimum_required(VERSION 3.7)/g" CMakeLists.txt

  bb_cont_mkdir_cd ${BUILD} /opt/${NAME}-build

  BUILD_TYPE="RELEASE"
  if bb_is_debug_build || [ ${BB_OVERRIDE_BUILD_TYPE} == "DEBUG" ]; then
    BUILD_TYPE="DEBUG"
  fi

  PYTHIA6=$(bb_cont_get_env ${BUILD} PYTHIA6)
  bb_cont_set_env ${BUILD} PYTHIA6_LIBRARY ${PYTHIA6}
  buildah run ${BUILD} cmake /opt/${NAME}-src \
          -DCMAKE_INSTALL_PREFIX=/opt/${NAME}/${BB_PKG_VERS} \
          -DNOVARWGT_USE_NUSIMDATA=OFF -DNOVARWGT_USE_CETLIB=OFF \
          -DNOVARWGT_USE_GENIE=ON -DNOVARWGT_INSTALL_SOURCE=OFF \
          -DCMAKE_BUILD_TYPE=${BUILD_TYPE}

  buildah run ${BUILD} make install -j ${N_CORE}

  bb_commit ${BUILD} ${COMPILE_STAGE_NAME}

fi

BASE=$(bb_from_base ${BB_PKG_NAME} ${BB_PKG_VERS} $(bb_get_runbox ${BB_PKG_ROOT_IT}))

bb_consume_target ${NAME} ${BB_PKG_VERS} \
  $(buildah from ${COMPILE_STAGE_NAME}) ${BASE}

bb_commit ${BASE}
