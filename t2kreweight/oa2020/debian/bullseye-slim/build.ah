#!/bin/bash

DO_BUILD_PSYCHE_SUPPORT=0

#If anything fails, we back out
set -e
if [ -z $BB_SCRIPT_DIR ]; then
  echo "[ERROR]: buildahbash script running outside buildahbash environment"
  exit 1
fi
source $BB_SCRIPT_DIR/buildah.funcs
COMPILE_STAGE_NAME="${BB_PKG_IMAGE_FQNAME}_build"
NAME=${BB_PKG_NAME}

if [ -z ${N_CORE} ]; then
    N_CORE=4
fi

if ! podman image exists ${COMPILE_STAGE_NAME}; then

  BUILD=$(bb_from_buildbox)

  bb_inject niwgreweight ${BB_PKG_VERS} ${BUILD}
  bb_inject neut ${BB_PKG_VERS} ${BUILD}

  if [ "${DO_BUILD_PSYCHE_SUPPORT}" == "1" ]; then
    bb_inject oaanalysisreader v2r19 ${BUILD}
  fi

  # T2KReWeight src is not freely available, use local token to pull it
  buildah run --volume ${HOME}/.ssh:/root/.ssh ${BUILD} \
    git clone git@github.com:t2k-software/T2KReWeight.git /opt/${NAME}-src

  bb_cont_cd ${BUILD} /opt/${NAME}-src
  buildah run ${BUILD} git checkout Patch/OA2020

  bb_cont_set_env ${BUILD} T2KREWEIGHT /opt/${NAME}-src

  bb_cont_set_env ${BUILD} OAANALYSISREADER_PROD $(bb_cont_get_env ${BUILD} ND280PROD)
  CERN=$(bb_cont_get_env ${BUILD} CERN)
  CERN_LEVEL=$(bb_cont_get_env ${BUILD} CERN_LEVEL)

  DEBUG_ARG=""
  if bb_is_debug_build; then
    DEBUG_ARG="--enable-debug"
  fi

  if [ "${DO_BUILD_PSYCHE_SUPPORT}" == "1" ]; then
    buildah run ${BUILD} ./configure \
                        --enable-neut \
                            --with-cern=${CERN}/${CERN_LEVEL} \
                        --enable-niwg ${DEBUG_ARG} \
                        --enable-psyche \
                        --enable-oaanalysis
  else
    buildah run ${BUILD} ./configure \
                    --enable-neut \
                        --with-cern=${CERN}/${CERN_LEVEL} \
                    --enable-niwg ${DEBUG_ARG}
  fi

  buildah run ${BUILD} bash -c \
    "ENV_CXXFLAGS=\" \$(root-config --cflags) \" make autogen-headers"
  buildah run ${BUILD} bash -c \
    "ENV_CXXFLAGS=\" \$(root-config --cflags) \" make make-bin-lib-dir"
  buildah run ${BUILD} bash -c \
    "ENV_CXXFLAGS=\" \$(root-config --cflags) \" make src"

  if [ "${DO_BUILD_PSYCHE_SUPPORT}" == "1" ]; then

    bb_cont_cd ${BUILD} /opt/${NAME}-src/app
    buildah run ${BUILD} bash -c \
    "ENV_CXXFLAGS=\" \$(root-config --cflags) \" make genWeightsSKsplines_newfunctions_2019Weights"

    buildah run ${BUILD} bash -c \
    "ENV_CXXFLAGS=\" \$(root-config --cflags) \" make genWeightsFromNRooTracker_BANFF_2020"
  fi


  bb_cont_mkdir ${BUILD} /opt/${NAME}/${BB_PKG_VERS}/bin \
                         /opt/${NAME}/${BB_PKG_VERS}/lib \
                         /opt/${NAME}/${BB_PKG_VERS}/include

  buildah run ${BUILD} ln -s /opt/${NAME}/${BB_PKG_VERS}/include \
                             /opt/${NAME}/${BB_PKG_VERS}/src
  bb_cont_cp ${BUILD} "/opt/${NAME}-src/src/*.h" \
                       /opt/${NAME}/${BB_PKG_VERS}/include/
  bb_cont_cp ${BUILD} /opt/${NAME}-src/lib/libT2KReWeight.so\
                      /opt/${NAME}/${BB_PKG_VERS}/lib/
  
  if [ "${DO_BUILD_PSYCHE_SUPPORT}" == "1" ]; then
    bb_cont_cp ${BUILD} "/opt/${NAME}-src/app/*.exe"\
                        /opt/${NAME}/${BB_PKG_VERS}/bin/
  fi

  bb_commit ${BUILD} ${COMPILE_STAGE_NAME}

fi

BASE=$(bb_from_base ${BB_PKG_NAME} ${BB_PKG_VERS} $(bb_get_runbox ${BB_PKG_ROOT_IT}))

bb_consume_target ${NAME} ${BB_PKG_VERS} \
  $(buildah from ${COMPILE_STAGE_NAME}) ${BASE}

bb_commit ${BASE}