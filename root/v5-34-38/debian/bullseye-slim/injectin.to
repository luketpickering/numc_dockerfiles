#!/bin/bash

#If anything fails, we back out
set -e
set +x

FROM=$1
TO=$2

if [ -z $BB_SCRIPT_DIR ]; then
  echo "[ERROR]: buildahbash script running outside buildahbash environment"
  exit 1
fi

source $BB_SCRIPT_DIR/buildah.funcs

if [ $(bb_cont_path_exists ${TO} /opt/${BB_INJ_NAME}) == "0" ]; then 
  exit 0
fi

bb_mv_build_target ${FROM} ${TO} pythia default

bb_cont_to_cont_copy ${FROM} ${TO} /opt/${BB_INJ_NAME} /opt/${BB_INJ_NAME}
if bb_is_debug_build; then
  bb_cont_to_cont_copy ${FROM} ${TO} /opt/${BB_INJ_NAME}-src \
                                     /opt/${BB_INJ_NAME}-src

fi

ROOTSYS="/opt/${BB_INJ_NAME}/${BB_INJ_VERS}"
bb_cont_set_env ${TO} ROOTSYS ${ROOTSYS}
bb_add_to_path_env ${TO} PATH ${ROOTSYS}/bin
bb_add_to_path_env ${TO} LD_LIBRARY_PATH ${ROOTSYS}/lib
bb_add_to_path_env ${TO} LIBPATH ${ROOTSYS}/lib
bb_add_to_path_env ${TO} JUPYTER_PATH ${ROOTSYS}/etc/notebook
bb_add_to_path_env ${TO} DYLD_LIBRARY_PATH ${ROOTSYS}/lib
bb_add_to_path_env ${TO} PYTHONPATH ${ROOTSYS}/lib
bb_add_to_path_env ${TO} SHLIB_PATH ${ROOTSYS}/lib
bb_add_to_path_env ${TO} CMAKE_PREFIX_PATH ${ROOTSYS}
