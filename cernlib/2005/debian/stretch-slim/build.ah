#!/bin/bash

#If anything fails, we back out
set -e
if [ -z $BB_SCRIPT_DIR ]; then
  echo "[ERROR]: buildahbash script running outside buildahbash environment"
  exit 1
fi
source $BB_SCRIPT_DIR/buildah.funcs
COMPILE_STAGE_NAME="${BB_PKG_IMAGE_FQNAME}_build"
NAME="${BB_PKG_NAME}"

if [ -z ${N_CORE} ]; then
    N_CORE=4
fi

if ! podman image exists ${COMPILE_STAGE_NAME}; then

  BUILD=$(bb_from_buildbox)

  # CERNLIB expects gmake to exist

  set +e
  buildah run ${BUILD} test -e /usr/bin/gmake
  GMAKE_MISSING=$?
  set -e

  if [ "${GMAKE_MISSING}" == "1" ]; then 
    buildah run ${BUILD} ln -s /usr/bin/make /usr/bin/gmake
  fi

  bb_cont_mkdir_cd ${BUILD} /opt/${NAME}-src
  buildah run ${BUILD} git clone  \
                https://github.com/luketpickering/cernlibgcc5-.git
  bb_cont_cd ${BUILD} /opt/${NAME}-src/cernlibgcc5-

  buildah run ${BUILD} ./build_cernlib.sh

  bb_cont_mkdir ${BUILD} /opt/${NAME}/${BB_PKG_VERS}

  bb_cont_mv ${BUILD} \
      /opt/${NAME}-src/cernlibgcc5-/cernlib_build/2005/{bin,include,lib} \
      /opt/${NAME}/${BB_PKG_VERS}

  bb_commit ${BUILD} ${COMPILE_STAGE_NAME}

fi

BASE=$(bb_from_base ${BB_PKG_NAME} ${BB_PKG_VERS} $(bb_get_runbox ${BB_PKG_ROOT_IT}))

bb_consume_target ${NAME} ${BB_PKG_VERS} \
  $(buildah from ${COMPILE_STAGE_NAME}) ${BASE}

bb_commit ${BASE}
